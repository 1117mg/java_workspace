	-Optional
		- Null 혹은 Nullable 한 값을 저장하는 Wrapper 클래스
		- 참조하여도 NPE가 발생하지 않도록 처리
		- null을 반환하면 오류가 발생할 가능성이 매우 높은 경우에 '결과 없음'을 명확하게 드러내기 위해 메소드의 반환 타입으로 사용되도록 매우 제한적인 경우로 설계
		- 부작용
			NullPointerException 대신 NoSuchElementException가 발생함
			이전에는 없었던 새로운 문제들이 발생함 : 직렬화 시 기본적으로 지원 x -> jackson은 지원
			코드의 가독성을 떨어뜨림
			시간적, 공간적 비용(또는 오버헤드)이 증가함 : Optional 객체를 감싸는 클래스이므로 메모리 추가, 내부 객체 접근을 위해 필수 관문이므로 접근 비용 추가

	- Stream : 배열이나 컬렉션의 저장 요소를 하나씩 참조해서 람다식으로 처리할 수 있게 해주는 반복자
	 - 특징 
		배열 또는 컬렉션 인스턴스에 함수 여러 개를 조합해서 원하는 결과를 필터링할 수 있으며 가공된 결과를 얻을 수 있습니다.
		람다를 통해 코드를 간결하게 표현할 수 있습니다.
		배열과 컬렉션을 통해 함수형으로 처리할 수 있습니다.
		병렬처리가 가능합니다.
		
	 - 구조 및 사용법
		1) 스트림 생성 : 스트림 인스턴스 생성
		2) 중개 연산 : 필터링(filtering) 및 맵핑(mapping) 등으로 원하는 결과를 만들어가는 중간 과정
		3) 최종 연산 : 최종적으로 결과를 만드는 작업  